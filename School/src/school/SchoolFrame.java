/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author delmoro-ke
 */
public class SchoolFrame extends javax.swing.JFrame {
    private School school = new School();
    private int tableMode = 0;

    /**
     * Creates new form SchoolFrame
     */
    public SchoolFrame() {
        initComponents();
        ((AbstractDocument) txtId.getDocument()).setDocumentFilter(new IntFilter());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblGrades = new javax.swing.JTable();
        filler23 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        panelInputs = new javax.swing.JPanel();
        panelStudent = new javax.swing.JPanel();
        lblStudent = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        panelId = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        txtId = new javax.swing.JTextField();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        panelName = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        txtName = new javax.swing.JTextField();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        panelButtons = new javax.swing.JPanel();
        btnAddSubject = new javax.swing.JButton();
        filler20 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 3), new java.awt.Dimension(3, 3), new java.awt.Dimension(3, 3));
        panelList = new javax.swing.JPanel();
        btnListAll = new javax.swing.JButton();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        btnListId = new javax.swing.JButton();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        btnListSubjectCode = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(3, 3), new java.awt.Dimension(3, 3), new java.awt.Dimension(3, 3));
        panelClear = new javax.swing.JPanel();
        btnClearAllSubjects = new javax.swing.JButton();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        btnClearSelectedSubjects = new javax.swing.JButton();
        filler19 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        btnClearTxt = new javax.swing.JButton();
        filler21 = new javax.swing.Box.Filler(new java.awt.Dimension(24, 24), new java.awt.Dimension(24, 24), new java.awt.Dimension(24, 24));
        panelSubject = new javax.swing.JPanel();
        lblSubject = new javax.swing.JLabel();
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        panelCode = new javax.swing.JPanel();
        lblCode = new javax.swing.JLabel();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        txtCode = new javax.swing.JTextField();
        filler14 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        panelDescription = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        filler13 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        txtDescription = new javax.swing.JTextField();
        filler15 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        panelUnits = new javax.swing.JPanel();
        lblUnits = new javax.swing.JLabel();
        filler16 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        comboUnits = new javax.swing.JComboBox<>();
        filler17 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        panelGrade = new javax.swing.JPanel();
        lblGrade = new javax.swing.JLabel();
        filler18 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));
        comboGrade = new javax.swing.JComboBox<>();
        filler25 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        filler28 = new javax.swing.Box.Filler(new java.awt.Dimension(24, 24), new java.awt.Dimension(24, 24), new java.awt.Dimension(24, 24));
        panelTotalGrades = new javax.swing.JPanel();
        lblTotalGrade = new javax.swing.JLabel();
        filler27 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        jScrollPane2 = new javax.swing.JScrollPane();
        listTotalGrades = new javax.swing.JList(new DefaultListModel());
        filler22 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12), new java.awt.Dimension(12, 12));
        filler24 = new javax.swing.Box.Filler(new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6), new java.awt.Dimension(6, 6));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("School System");
        setMinimumSize(new java.awt.Dimension(1000, 500));
        setPreferredSize(new java.awt.Dimension(1000, 500));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jScrollPane1.setAlignmentY(0.0F);

        tblGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Subject code", "Description", "Units", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGrades.setAlignmentX(0.0F);
        tblGrades.setAlignmentY(0.0F);
        tblGrades.setColumnSelectionAllowed(true);
        tblGrades.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblGrades);
        tblGrades.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tblGrades.getColumnModel().getColumnCount() > 0) {
            tblGrades.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblGrades.getColumnModel().getColumn(1).setResizable(false);
            tblGrades.getColumnModel().getColumn(2).setPreferredWidth(25);
            tblGrades.getColumnModel().getColumn(4).setPreferredWidth(15);
            tblGrades.getColumnModel().getColumn(5).setPreferredWidth(15);
        }

        getContentPane().add(jScrollPane1);

        filler23.setAlignmentX(0.0F);
        filler23.setAlignmentY(0.0F);
        filler23.setAutoscrolls(true);
        getContentPane().add(filler23);

        panelInputs.setAlignmentY(0.0F);
        panelInputs.setLayout(new javax.swing.BoxLayout(panelInputs, javax.swing.BoxLayout.LINE_AXIS));

        panelStudent.setAlignmentY(0.0F);
        panelStudent.setLayout(new javax.swing.BoxLayout(panelStudent, javax.swing.BoxLayout.PAGE_AXIS));

        lblStudent.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStudent.setText("Student");
        panelStudent.add(lblStudent);

        filler1.setAlignmentX(0.0F);
        panelStudent.add(filler1);

        panelId.setAlignmentX(0.0F);
        panelId.setLayout(new javax.swing.BoxLayout(panelId, javax.swing.BoxLayout.LINE_AXIS));

        lblId.setText("ID");
        lblId.setMaximumSize(new java.awt.Dimension(40, 14));
        lblId.setMinimumSize(new java.awt.Dimension(40, 14));
        lblId.setPreferredSize(new java.awt.Dimension(40, 14));
        panelId.add(lblId);
        panelId.add(filler2);

        txtId.setMaximumSize(new java.awt.Dimension(100, 25));
        txtId.setMinimumSize(new java.awt.Dimension(100, 25));
        txtId.setPreferredSize(new java.awt.Dimension(100, 25));
        panelId.add(txtId);

        panelStudent.add(panelId);

        filler5.setAlignmentX(0.0F);
        panelStudent.add(filler5);

        panelName.setAlignmentX(0.0F);
        panelName.setLayout(new javax.swing.BoxLayout(panelName, javax.swing.BoxLayout.LINE_AXIS));

        lblName.setText("Name");
        lblName.setMaximumSize(new java.awt.Dimension(40, 14));
        lblName.setMinimumSize(new java.awt.Dimension(40, 14));
        lblName.setPreferredSize(new java.awt.Dimension(40, 14));
        panelName.add(lblName);
        panelName.add(filler3);

        txtName.setMaximumSize(new java.awt.Dimension(250, 25));
        txtName.setMinimumSize(new java.awt.Dimension(250, 25));
        txtName.setPreferredSize(new java.awt.Dimension(250, 25));
        panelName.add(txtName);

        panelStudent.add(panelName);

        filler4.setAlignmentX(0.0F);
        panelStudent.add(filler4);

        panelButtons.setAlignmentY(0.0F);
        panelButtons.setLayout(new javax.swing.BoxLayout(panelButtons, javax.swing.BoxLayout.PAGE_AXIS));

        btnAddSubject.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAddSubject.setText("Add subject");
        btnAddSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubjectActionPerformed(evt);
            }
        });
        panelButtons.add(btnAddSubject);

        filler20.setAlignmentX(0.0F);
        filler20.setAlignmentY(0.0F);
        panelButtons.add(filler20);

        panelList.setAlignmentX(0.0F);
        panelList.setAlignmentY(0.0F);
        panelList.setLayout(new javax.swing.BoxLayout(panelList, javax.swing.BoxLayout.LINE_AXIS));

        btnListAll.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnListAll.setText("List all");
        btnListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllActionPerformed(evt);
            }
        });
        panelList.add(btnListAll);
        panelList.add(filler9);

        btnListId.setText("List by ID");
        btnListId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListIdActionPerformed(evt);
            }
        });
        panelList.add(btnListId);
        panelList.add(filler10);

        btnListSubjectCode.setText("List by subject code");
        btnListSubjectCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListSubjectCodeActionPerformed(evt);
            }
        });
        panelList.add(btnListSubjectCode);

        panelButtons.add(panelList);

        filler6.setAlignmentX(0.0F);
        filler6.setAlignmentY(0.0F);
        panelButtons.add(filler6);

        panelClear.setAlignmentX(0.0F);
        panelClear.setAlignmentY(0.0F);
        panelClear.setLayout(new javax.swing.BoxLayout(panelClear, javax.swing.BoxLayout.LINE_AXIS));

        btnClearAllSubjects.setBackground(new java.awt.Color(200, 100, 100));
        btnClearAllSubjects.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnClearAllSubjects.setForeground(new java.awt.Color(255, 255, 255));
        btnClearAllSubjects.setText("Clear all");
        btnClearAllSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllSubjectsActionPerformed(evt);
            }
        });
        panelClear.add(btnClearAllSubjects);
        panelClear.add(filler8);

        btnClearSelectedSubjects.setBackground(new java.awt.Color(200, 100, 100));
        btnClearSelectedSubjects.setForeground(new java.awt.Color(255, 255, 255));
        btnClearSelectedSubjects.setText("Clear selected");
        btnClearSelectedSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSelectedSubjectsActionPerformed(evt);
            }
        });
        panelClear.add(btnClearSelectedSubjects);

        filler19.setAlignmentX(0.0F);
        panelClear.add(filler19);

        btnClearTxt.setBackground(new java.awt.Color(200, 100, 100));
        btnClearTxt.setForeground(new java.awt.Color(255, 255, 255));
        btnClearTxt.setText("Clear text fields");
        btnClearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTxtActionPerformed(evt);
            }
        });
        panelClear.add(btnClearTxt);

        panelButtons.add(panelClear);

        panelStudent.add(panelButtons);

        panelInputs.add(panelStudent);

        filler21.setAlignmentX(0.0F);
        filler21.setAlignmentY(0.0F);
        filler21.setAutoscrolls(true);
        panelInputs.add(filler21);

        panelSubject.setAlignmentY(0.0F);
        panelSubject.setLayout(new javax.swing.BoxLayout(panelSubject, javax.swing.BoxLayout.PAGE_AXIS));

        lblSubject.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSubject.setText("Subject");
        panelSubject.add(lblSubject);

        filler11.setAlignmentX(0.0F);
        panelSubject.add(filler11);

        panelCode.setAlignmentX(0.0F);
        panelCode.setLayout(new javax.swing.BoxLayout(panelCode, javax.swing.BoxLayout.LINE_AXIS));

        lblCode.setText("Code");
        lblCode.setMaximumSize(new java.awt.Dimension(80, 14));
        lblCode.setMinimumSize(new java.awt.Dimension(80, 14));
        lblCode.setName(""); // NOI18N
        lblCode.setPreferredSize(new java.awt.Dimension(80, 14));
        panelCode.add(lblCode);

        filler12.setAlignmentX(0.0F);
        panelCode.add(filler12);

        txtCode.setAlignmentX(0.0F);
        txtCode.setMaximumSize(new java.awt.Dimension(100, 25));
        txtCode.setMinimumSize(new java.awt.Dimension(100, 25));
        txtCode.setPreferredSize(new java.awt.Dimension(100, 25));
        txtCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeActionPerformed(evt);
            }
        });
        panelCode.add(txtCode);

        panelSubject.add(panelCode);

        filler14.setAlignmentX(0.0F);
        panelSubject.add(filler14);

        panelDescription.setAlignmentX(0.0F);
        panelDescription.setLayout(new javax.swing.BoxLayout(panelDescription, javax.swing.BoxLayout.LINE_AXIS));

        lblDescription.setText("Description");
        lblDescription.setMaximumSize(new java.awt.Dimension(80, 14));
        lblDescription.setMinimumSize(new java.awt.Dimension(80, 14));
        lblDescription.setPreferredSize(new java.awt.Dimension(80, 14));
        panelDescription.add(lblDescription);

        filler13.setAlignmentX(0.0F);
        panelDescription.add(filler13);

        txtDescription.setAlignmentX(0.0F);
        txtDescription.setMaximumSize(new java.awt.Dimension(250, 25));
        txtDescription.setMinimumSize(new java.awt.Dimension(250, 25));
        txtDescription.setPreferredSize(new java.awt.Dimension(250, 25));
        panelDescription.add(txtDescription);

        panelSubject.add(panelDescription);

        filler15.setAlignmentX(0.0F);
        panelSubject.add(filler15);

        panelUnits.setAlignmentX(0.0F);
        panelUnits.setLayout(new javax.swing.BoxLayout(panelUnits, javax.swing.BoxLayout.LINE_AXIS));

        lblUnits.setText("Units");
        lblUnits.setMaximumSize(new java.awt.Dimension(80, 14));
        lblUnits.setMinimumSize(new java.awt.Dimension(80, 14));
        lblUnits.setPreferredSize(new java.awt.Dimension(80, 14));
        panelUnits.add(lblUnits);

        filler16.setAlignmentX(0.0F);
        panelUnits.add(filler16);

        comboUnits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "2.0", "3.0", "4.0", "5.0", "6.0" }));
        comboUnits.setAlignmentX(0.0F);
        comboUnits.setMaximumSize(new java.awt.Dimension(50, 25));
        comboUnits.setMinimumSize(new java.awt.Dimension(50, 25));
        comboUnits.setName(""); // NOI18N
        comboUnits.setPreferredSize(new java.awt.Dimension(50, 25));
        panelUnits.add(comboUnits);

        panelSubject.add(panelUnits);

        filler17.setAlignmentX(0.0F);
        panelSubject.add(filler17);

        panelGrade.setAlignmentX(0.0F);
        panelGrade.setAlignmentY(0.0F);
        panelGrade.setLayout(new javax.swing.BoxLayout(panelGrade, javax.swing.BoxLayout.LINE_AXIS));

        lblGrade.setText("Grade");
        lblGrade.setMaximumSize(new java.awt.Dimension(80, 14));
        lblGrade.setMinimumSize(new java.awt.Dimension(80, 14));
        lblGrade.setPreferredSize(new java.awt.Dimension(80, 14));
        panelGrade.add(lblGrade);

        filler18.setAlignmentX(0.0F);
        panelGrade.add(filler18);

        comboGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "1.25", "1.5", "1.75", "2.0", "2.25", "2.5", "2.75", "3.0", "5.0" }));
        comboGrade.setAlignmentX(0.0F);
        comboGrade.setMaximumSize(new java.awt.Dimension(50, 25));
        comboGrade.setMinimumSize(new java.awt.Dimension(50, 25));
        comboGrade.setPreferredSize(new java.awt.Dimension(50, 25));
        panelGrade.add(comboGrade);

        panelSubject.add(panelGrade);

        filler25.setAlignmentX(0.0F);
        panelSubject.add(filler25);

        panelInputs.add(panelSubject);

        filler28.setAlignmentX(0.0F);
        filler28.setAlignmentY(0.0F);
        filler28.setAutoscrolls(true);
        panelInputs.add(filler28);

        panelTotalGrades.setAlignmentX(0.0F);
        panelTotalGrades.setAlignmentY(0.0F);
        panelTotalGrades.setLayout(new javax.swing.BoxLayout(panelTotalGrades, javax.swing.BoxLayout.PAGE_AXIS));

        lblTotalGrade.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lblTotalGrade.setText("Total grades");
        lblTotalGrade.setAlignmentY(0.0F);
        lblTotalGrade.setMaximumSize(new java.awt.Dimension(80, 14));
        lblTotalGrade.setMinimumSize(new java.awt.Dimension(80, 14));
        lblTotalGrade.setPreferredSize(new java.awt.Dimension(80, 14));
        panelTotalGrades.add(lblTotalGrade);

        filler27.setAlignmentX(0.0F);
        panelTotalGrades.add(filler27);

        jScrollPane2.setAlignmentX(0.0F);
        jScrollPane2.setAlignmentY(0.0F);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(250, 125));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(250, 125));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 125));

        listTotalGrades.setMaximumSize(new java.awt.Dimension(45, 90));
        listTotalGrades.setMinimumSize(new java.awt.Dimension(45, 90));
        listTotalGrades.setPreferredSize(new java.awt.Dimension(45, 90));
        jScrollPane2.setViewportView(listTotalGrades);

        panelTotalGrades.add(jScrollPane2);

        panelInputs.add(panelTotalGrades);

        getContentPane().add(panelInputs);

        filler22.setAlignmentX(0.0F);
        filler22.setAlignmentY(0.0F);
        filler22.setAutoscrolls(true);
        getContentPane().add(filler22);

        filler24.setAlignmentX(0.0F);
        filler24.setAlignmentY(0.0F);
        filler24.setAutoscrolls(true);
        getContentPane().add(filler24);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeActionPerformed

    private void btnClearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTxtActionPerformed
        txtId.setText("");
        txtName.setText("");
        txtCode.setText("");
        txtDescription.setText("");
        
        txtId.requestFocus();
    }//GEN-LAST:event_btnClearTxtActionPerformed

    private void btnClearAllSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllSubjectsActionPerformed
        if (school.getAllGrades().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The grades table is empty.", "Table is empty", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        school.clearGrades();
        updateInfo();
    }//GEN-LAST:event_btnClearAllSubjectsActionPerformed

    private void btnAddSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubjectActionPerformed
        if (!checkTxt()) {
            JOptionPane.showMessageDialog(null, "All data must be entered!", "Can't add subject", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String code = txtCode.getText().trim();
        int id = Integer.parseInt(txtId.getText());

        for (StudentGrade grade : school.getAllGrades()) {
            if (grade.getStudent().getId() == id && grade.getSubject().getCode().equals(code)) {
                JOptionPane.showMessageDialog(null, "You can't add multiple subjects with the same code for the same student!", "Can't add subject", JOptionPane.ERROR_MESSAGE);
                txtCode.requestFocus();
                return;
            }
        }

        Student student = new Student (Integer.parseInt(txtId.getText()), txtName.getText().trim());
        Subject subject = new Subject (txtCode.getText().trim(), txtDescription.getText().trim(), Float.parseFloat(comboUnits.getSelectedItem().toString()));
        StudentGrade grade = new StudentGrade (subject, student, Float.parseFloat(comboGrade.getSelectedItem().toString()));

        school.addGrade(grade);
        updateInfo();
    }//GEN-LAST:event_btnAddSubjectActionPerformed

    private void btnListSubjectCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListSubjectCodeActionPerformed
        tableMode = 2;
        if (school.getAllGrades().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The grades table is empty.", "Table is empty", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        updateInfo();
    }//GEN-LAST:event_btnListSubjectCodeActionPerformed

    private void btnListIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListIdActionPerformed
        tableMode = 1;
        if (school.getAllGrades().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The grades table is empty.", "Table is empty", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        updateInfo();
    }//GEN-LAST:event_btnListIdActionPerformed

    private void btnListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListAllActionPerformed
        tableMode = 0;
        if (school.getAllGrades().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The grades table is empty.", "Table is empty", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        updateInfo();
    }//GEN-LAST:event_btnListAllActionPerformed

    private void btnClearSelectedSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSelectedSubjectsActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) tblGrades.getModel();
        ArrayList<StudentGrade> grades = school.getAllGrades();
        int[] rows = tblGrades.getSelectedRows();

        if (rows.length == 0) {
            JOptionPane.showMessageDialog(null, "No subjects are selected.", "Can't remove subject", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        for (int r : rows) {
            int id = Integer.parseInt(tableModel.getValueAt(r, 0).toString());
            String code = tableModel.getValueAt(r, 2).toString();

            for (int i = 0; i < grades.size(); i++) {
                if (grades.get(i).getStudent().getId() == id && grades.get(i).getSubject().getCode().equals(code)) {
                    school.removeGrade(grades.get(i));
                }
            }
        }

        updateInfo();
    }//GEN-LAST:event_btnClearSelectedSubjectsActionPerformed

    private boolean checkTxt() {
        return !(txtId.getText().isEmpty() || txtName.getText().isEmpty() || txtCode.getText().isEmpty() || txtDescription.getText().isEmpty());
    }
    
    private void updateInfo() {        
        ArrayList<StudentGrade> grades;
        ArrayList<TotalGradeInfo> totalGrades = new ArrayList<>();
        switch (tableMode) {
            default:
            case 0:
                grades = school.getAllGrades();
                break;
            case 1:
                grades = school.getGradesById(Integer.parseInt(txtId.getText()));
                break;
            case 2:
                grades = school.getGradesBySubject(txtCode.getText());
                break;
        }
        
        DefaultTableModel tblModel = (DefaultTableModel) tblGrades.getModel();
        DefaultListModel listModel = (DefaultListModel) listTotalGrades.getModel();
        tblModel.setRowCount(0);
        listModel.setSize(0);
        String[] n = new String[6];
        
        for (int i = 0; i < grades.size(); i++) {
            int id = grades.get(i).getStudent().getId();
            String name = grades.get(i).getStudent().getName();
            float grade = grades.get(i).getGrade();
            float units = grades.get(i).getSubject().getUnits();
            
            n[0] = Integer.toString(id);
            n[1] = name;
            n[2] = grades.get(i).getSubject().getCode();
            n[3] = grades.get(i).getSubject().getDescription();
            n[4] = String.format("%.1f", units);
            n[5] = String.format("%.1f", grade);
            
            tblModel.addRow(n);

            boolean studentFound = false;
            
            for (TotalGradeInfo totalGrade : totalGrades) {
                if (totalGrade.getId() == id) {
                    totalGrade.addWeightedGrade(grade * units);
                    totalGrade.addUnits(units);
                    studentFound = true;
                    break;
                }
            }
            
            if (!studentFound) {
                TotalGradeInfo newTotalGrade = new TotalGradeInfo(id, name);
                newTotalGrade.addWeightedGrade(grade * units);
                newTotalGrade.addUnits(units);
                totalGrades.add(newTotalGrade);
            }
        }
        
        for (TotalGradeInfo totalGrade : totalGrades) {
            String data = String.format("%s (%s): %.1f", totalGrade.getName(), totalGrade.getId(), totalGrade.getTotalGrade());
            listModel.addElement(data);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchoolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchoolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchoolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchoolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchoolFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSubject;
    private javax.swing.JButton btnClearAllSubjects;
    private javax.swing.JButton btnClearSelectedSubjects;
    private javax.swing.JButton btnClearTxt;
    private javax.swing.JButton btnListAll;
    private javax.swing.JButton btnListId;
    private javax.swing.JButton btnListSubjectCode;
    private javax.swing.JComboBox<String> comboGrade;
    private javax.swing.JComboBox<String> comboUnits;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler13;
    private javax.swing.Box.Filler filler14;
    private javax.swing.Box.Filler filler15;
    private javax.swing.Box.Filler filler16;
    private javax.swing.Box.Filler filler17;
    private javax.swing.Box.Filler filler18;
    private javax.swing.Box.Filler filler19;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler20;
    private javax.swing.Box.Filler filler21;
    private javax.swing.Box.Filler filler22;
    private javax.swing.Box.Filler filler23;
    private javax.swing.Box.Filler filler24;
    private javax.swing.Box.Filler filler25;
    private javax.swing.Box.Filler filler27;
    private javax.swing.Box.Filler filler28;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStudent;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTotalGrade;
    private javax.swing.JLabel lblUnits;
    private javax.swing.JList<String> listTotalGrades;
    private javax.swing.JPanel panelButtons;
    private javax.swing.JPanel panelClear;
    private javax.swing.JPanel panelCode;
    private javax.swing.JPanel panelDescription;
    private javax.swing.JPanel panelGrade;
    private javax.swing.JPanel panelId;
    private javax.swing.JPanel panelInputs;
    private javax.swing.JPanel panelList;
    private javax.swing.JPanel panelName;
    private javax.swing.JPanel panelStudent;
    private javax.swing.JPanel panelSubject;
    private javax.swing.JPanel panelTotalGrades;
    private javax.swing.JPanel panelUnits;
    private javax.swing.JTable tblGrades;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}

class TotalGradeInfo {
    private final int id;
    private final String name;
    private float weightedGrade;
    private float units;
    
    public TotalGradeInfo (int id, String name) {
        this.id = id;
        this.name = name;
        weightedGrade = 0;
        units = 0;
    }

    public void addWeightedGrade (float grade) {
        this.weightedGrade += grade;
    }

    public void addUnits (float units) {
        this.units += units;
    }
    
    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public float getTotalGrade() {
        float total = weightedGrade / units;
        
        if (total > 1.25) return 1f;
        else if (total > 1.5) return 1.25f;
        else if (total > 1.75) return 1.5f;
        else if (total > 2) return 1.75f;
        else if (total > 2.25) return 2f;
        else if (total > 2.5) return 2.25f;
        else if (total > 2.75) return 2.5f;
        else if (total > 3.0) return 2.75f;

        return 5f;
    }
}

class IntFilter extends DocumentFilter {
    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
        if (isInt(string)) {
            super.insertString(fb, offset, string, attr);
        }
    }

    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
        if (isInt(text)) {
            super.replace(fb, offset, length, text, attrs);
        }
    }

    @Override
    public void remove(DocumentFilter.FilterBypass fb, int offset, int length) throws BadLocationException {
        super.remove(fb, offset, length);
    }

    private boolean isInt(String text) {
        try {
            Integer.valueOf (text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
}

