/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Classes.Subject;
import Utilities.PopulateTable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoDatabase;
import javax.swing.JOptionPane;

/**
 *
 * @author Delmoro-Ke
 */
public class SubjectPanel extends javax.swing.JPanel {

    boolean courseFilter;
    boolean yearLevelFilter;

    /**
     * Creates new form EnrollmentPane
     */
    public SubjectPanel() {
        initComponents();
        PopulateTable.subject(tableSubjects);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInputs = new javax.swing.JPanel();
        panelSubjectCode = new javax.swing.JPanel();
        lblSubjectCode = new javax.swing.JLabel();
        txtSubjectCode = new javax.swing.JTextField();
        panelDescription = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        panelUnits = new javax.swing.JPanel();
        lblUnits = new javax.swing.JLabel();
        comboUnits = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        scrollSubjects = new javax.swing.JScrollPane();
        tableSubjects = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        panelInputs.setMaximumSize(new java.awt.Dimension(32767, 160));
        panelInputs.setOpaque(false);
        panelInputs.setPreferredSize(new java.awt.Dimension(100, 120));
        panelInputs.setLayout(new javax.swing.BoxLayout(panelInputs, javax.swing.BoxLayout.Y_AXIS));

        panelSubjectCode.setOpaque(false);

        lblSubjectCode.setText("Subject code");
        lblSubjectCode.setMaximumSize(new java.awt.Dimension(100, 25));
        lblSubjectCode.setMinimumSize(new java.awt.Dimension(100, 25));
        lblSubjectCode.setPreferredSize(new java.awt.Dimension(100, 25));
        panelSubjectCode.add(lblSubjectCode);

        txtSubjectCode.setMaximumSize(new java.awt.Dimension(250, 30));
        txtSubjectCode.setMinimumSize(new java.awt.Dimension(250, 30));
        txtSubjectCode.setPreferredSize(new java.awt.Dimension(250, 30));
        panelSubjectCode.add(txtSubjectCode);

        panelInputs.add(panelSubjectCode);

        panelDescription.setOpaque(false);

        lblDescription.setText("Description");
        lblDescription.setMaximumSize(new java.awt.Dimension(100, 25));
        lblDescription.setMinimumSize(new java.awt.Dimension(100, 25));
        lblDescription.setPreferredSize(new java.awt.Dimension(100, 25));
        panelDescription.add(lblDescription);

        txtDescription.setMaximumSize(new java.awt.Dimension(250, 30));
        txtDescription.setMinimumSize(new java.awt.Dimension(250, 30));
        txtDescription.setPreferredSize(new java.awt.Dimension(250, 30));
        panelDescription.add(txtDescription);

        panelInputs.add(panelDescription);

        panelUnits.setOpaque(false);

        lblUnits.setText("Units");
        lblUnits.setMaximumSize(new java.awt.Dimension(100, 25));
        lblUnits.setMinimumSize(new java.awt.Dimension(100, 25));
        lblUnits.setPreferredSize(new java.awt.Dimension(100, 25));
        panelUnits.add(lblUnits);

        comboUnits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.0", "2.0", "3.0", "4.0", "5.0" }));
        comboUnits.setToolTipText("");
        comboUnits.setMaximumSize(new java.awt.Dimension(185, 30));
        comboUnits.setMinimumSize(new java.awt.Dimension(185, 30));
        comboUnits.setName(""); // NOI18N
        comboUnits.setPreferredSize(new java.awt.Dimension(185, 30));
        comboUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUnitsActionPerformed(evt);
            }
        });
        panelUnits.add(comboUnits);
        comboUnits.getAccessibleContext().setAccessibleName("");

        btnSave.setText("Save");
        btnSave.setMaximumSize(new java.awt.Dimension(60, 30));
        btnSave.setMinimumSize(new java.awt.Dimension(60, 30));
        btnSave.setPreferredSize(new java.awt.Dimension(60, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        panelUnits.add(btnSave);

        panelInputs.add(panelUnits);

        add(panelInputs);

        tableSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject code", "Description", "Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSubjects.getTableHeader().setReorderingAllowed(false);
        scrollSubjects.setViewportView(tableSubjects);
        if (tableSubjects.getColumnModel().getColumnCount() > 0) {
            tableSubjects.getColumnModel().getColumn(0).setMinWidth(0);
            tableSubjects.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableSubjects.getColumnModel().getColumn(2).setMinWidth(0);
            tableSubjects.getColumnModel().getColumn(2).setPreferredWidth(0);
        }

        add(scrollSubjects);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtSubjectCode.getText().isBlank() || txtDescription.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Missing info!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = client.getDatabase("Enrollment");

            Subject s = new Subject(
                    txtSubjectCode.getText().trim(),
                    txtDescription.getText().trim(),
                    Double.parseDouble(comboUnits.getSelectedItem().toString())
            );

            s.addSubject(db);
        } catch (Exception e) {
            e.printStackTrace();
        }
        PopulateTable.subject(tableSubjects);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void comboUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUnitsActionPerformed
        PopulateTable.subject(tableSubjects);
    }//GEN-LAST:event_comboUnitsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboUnits;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblSubjectCode;
    private javax.swing.JLabel lblUnits;
    private javax.swing.JPanel panelDescription;
    private javax.swing.JPanel panelInputs;
    private javax.swing.JPanel panelSubjectCode;
    private javax.swing.JPanel panelUnits;
    private javax.swing.JScrollPane scrollSubjects;
    private javax.swing.JTable tableSubjects;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtSubjectCode;
    // End of variables declaration//GEN-END:variables
}
