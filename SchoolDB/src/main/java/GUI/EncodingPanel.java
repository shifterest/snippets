/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Classes.Enrollment;
import Classes.Student;
import Classes.Subject;
import Utilities.PopulateCombo;
import Utilities.PopulateTable;
import Utilities.StudentIDFilter;
import Utilities.StudentIDListener;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoDatabase;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author Delmoro-Ke
 */
public class EncodingPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnrollmentPane
     */
    public EncodingPanel() {
        initComponents();
        ((AbstractDocument) txtStudentId.getDocument()).setDocumentFilter(new StudentIDFilter());
        txtStudentId.getDocument().addDocumentListener(new StudentIDListener(comboStudentName, tableGrades));

        PopulateCombo.studentName(comboStudentName);
        PopulateCombo.subjectCode(comboSubjectCode);
        PopulateCombo.subjectDesc(comboSubjectDesc);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInputs = new javax.swing.JPanel();
        panelStudentID = new javax.swing.JPanel();
        lblStudentID = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        panelStudentName = new javax.swing.JPanel();
        lblStudentName = new javax.swing.JLabel();
        comboStudentName = new javax.swing.JComboBox<>();
        separator = new javax.swing.JSeparator();
        panelSubjectCode = new javax.swing.JPanel();
        lblSubjectCode = new javax.swing.JLabel();
        comboSubjectCode = new javax.swing.JComboBox<>();
        panelSubjectDescription = new javax.swing.JPanel();
        lblSubjectDescription = new javax.swing.JLabel();
        comboSubjectDesc = new javax.swing.JComboBox<>();
        panelGrade = new javax.swing.JPanel();
        lblGrade = new javax.swing.JLabel();
        comboGrade = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        scrollGrades = new javax.swing.JScrollPane();
        tableGrades = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        panelInputs.setAlignmentX(0.0F);
        panelInputs.setAlignmentY(0.0F);
        panelInputs.setMaximumSize(new java.awt.Dimension(32767, 200));
        panelInputs.setMinimumSize(new java.awt.Dimension(365, 205));
        panelInputs.setName(""); // NOI18N
        panelInputs.setOpaque(false);
        panelInputs.setPreferredSize(new java.awt.Dimension(370, 200));
        panelInputs.setLayout(new javax.swing.BoxLayout(panelInputs, javax.swing.BoxLayout.Y_AXIS));

        panelStudentID.setOpaque(false);

        lblStudentID.setText("Student ID");
        lblStudentID.setMaximumSize(new java.awt.Dimension(110, 25));
        lblStudentID.setMinimumSize(new java.awt.Dimension(110, 25));
        lblStudentID.setPreferredSize(new java.awt.Dimension(110, 25));
        panelStudentID.add(lblStudentID);

        txtStudentId.setMaximumSize(new java.awt.Dimension(250, 30));
        txtStudentId.setMinimumSize(new java.awt.Dimension(250, 30));
        txtStudentId.setPreferredSize(new java.awt.Dimension(250, 30));
        panelStudentID.add(txtStudentId);

        panelInputs.add(panelStudentID);

        panelStudentName.setOpaque(false);

        lblStudentName.setText("Student name");
        lblStudentName.setMaximumSize(new java.awt.Dimension(110, 25));
        lblStudentName.setMinimumSize(new java.awt.Dimension(110, 25));
        lblStudentName.setPreferredSize(new java.awt.Dimension(110, 25));
        panelStudentName.add(lblStudentName);

        comboStudentName.setMaximumSize(new java.awt.Dimension(250, 30));
        comboStudentName.setMinimumSize(new java.awt.Dimension(250, 30));
        comboStudentName.setName(""); // NOI18N
        comboStudentName.setPreferredSize(new java.awt.Dimension(250, 30));
        comboStudentName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboStudentNamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        panelStudentName.add(comboStudentName);

        panelInputs.add(panelStudentName);

        separator.setForeground(new java.awt.Color(255, 255, 255));
        separator.setMaximumSize(new java.awt.Dimension(365, 5));
        separator.setMinimumSize(new java.awt.Dimension(365, 5));
        separator.setPreferredSize(new java.awt.Dimension(365, 5));
        panelInputs.add(separator);

        panelSubjectCode.setOpaque(false);

        lblSubjectCode.setText("Subject code");
        lblSubjectCode.setMaximumSize(new java.awt.Dimension(110, 25));
        lblSubjectCode.setMinimumSize(new java.awt.Dimension(110, 25));
        lblSubjectCode.setPreferredSize(new java.awt.Dimension(110, 25));
        panelSubjectCode.add(lblSubjectCode);

        comboSubjectCode.setMaximumSize(new java.awt.Dimension(250, 30));
        comboSubjectCode.setMinimumSize(new java.awt.Dimension(250, 30));
        comboSubjectCode.setName(""); // NOI18N
        comboSubjectCode.setPreferredSize(new java.awt.Dimension(250, 30));
        comboSubjectCode.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboSubjectCodePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        panelSubjectCode.add(comboSubjectCode);

        panelInputs.add(panelSubjectCode);

        panelSubjectDescription.setOpaque(false);

        lblSubjectDescription.setText("Subject description");
        lblSubjectDescription.setMaximumSize(new java.awt.Dimension(110, 25));
        lblSubjectDescription.setMinimumSize(new java.awt.Dimension(110, 25));
        lblSubjectDescription.setPreferredSize(new java.awt.Dimension(110, 25));
        panelSubjectDescription.add(lblSubjectDescription);

        comboSubjectDesc.setMaximumSize(new java.awt.Dimension(250, 30));
        comboSubjectDesc.setMinimumSize(new java.awt.Dimension(250, 30));
        comboSubjectDesc.setName(""); // NOI18N
        comboSubjectDesc.setPreferredSize(new java.awt.Dimension(250, 30));
        comboSubjectDesc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboSubjectDescPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        panelSubjectDescription.add(comboSubjectDesc);

        panelInputs.add(panelSubjectDescription);

        panelGrade.setOpaque(false);

        lblGrade.setText("Grade");
        lblGrade.setMaximumSize(new java.awt.Dimension(110, 25));
        lblGrade.setMinimumSize(new java.awt.Dimension(110, 25));
        lblGrade.setPreferredSize(new java.awt.Dimension(110, 25));
        panelGrade.add(lblGrade);

        comboGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.00", "1.25", "1.50", "1.75", "2.00", "2.25", "2.50", "2.75", "3.00", "5.00" }));
        comboGrade.setToolTipText("");
        comboGrade.setMaximumSize(new java.awt.Dimension(185, 30));
        comboGrade.setMinimumSize(new java.awt.Dimension(185, 30));
        comboGrade.setName(""); // NOI18N
        comboGrade.setPreferredSize(new java.awt.Dimension(185, 30));
        panelGrade.add(comboGrade);

        btnSave.setText("Save");
        btnSave.setMaximumSize(new java.awt.Dimension(60, 30));
        btnSave.setMinimumSize(new java.awt.Dimension(60, 30));
        btnSave.setPreferredSize(new java.awt.Dimension(60, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        panelGrade.add(btnSave);

        panelInputs.add(panelGrade);

        add(panelInputs);

        tableGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject code", "Description", "Units", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGrades.getTableHeader().setReorderingAllowed(false);
        scrollGrades.setViewportView(tableGrades);
        if (tableGrades.getColumnModel().getColumnCount() > 0) {
            tableGrades.getColumnModel().getColumn(0).setMinWidth(0);
            tableGrades.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableGrades.getColumnModel().getColumn(2).setMinWidth(0);
            tableGrades.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableGrades.getColumnModel().getColumn(3).setMinWidth(0);
            tableGrades.getColumnModel().getColumn(3).setPreferredWidth(0);
        }

        add(scrollGrades);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String studentId = txtStudentId.getText();
        String studentName = (comboStudentName.getSelectedItem() != null) ? comboStudentName.getSelectedItem().toString() : "";
        String subjectCode = (comboSubjectCode.getSelectedItem() != null) ? comboSubjectCode.getSelectedItem().toString() : "";
        String subjectDesc = (comboSubjectDesc.getSelectedItem() != null) ? comboSubjectDesc.getSelectedItem().toString() : "";

        if (studentId.isBlank() || studentName.isBlank() || subjectCode.isBlank() || subjectDesc.isBlank()) {
            JOptionPane.showMessageDialog(null, "Missing info!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = client.getDatabase("Enrollment");

            Enrollment enrollment = new Enrollment(
                    Integer.parseInt(txtStudentId.getText().trim()),
                    comboSubjectCode.getSelectedItem().toString(),
                    Double.parseDouble(comboGrade.getSelectedItem().toString())
            );
            enrollment.addEnrollment(db);
        } catch (Exception e) {
            e.printStackTrace(System.out);
        }

        PopulateCombo.studentName(comboStudentName);
        PopulateCombo.subjectCode(comboSubjectCode);
        PopulateCombo.subjectDesc(comboSubjectDesc);
        PopulateTable.grade(tableGrades, comboStudentName);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void comboSubjectCodePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboSubjectCodePopupMenuWillBecomeInvisible
        if (comboSubjectCode.getSelectedItem() == null) {
            return;
        }

        PopulateCombo.subjectCode(comboSubjectCode);
        PopulateCombo.subjectDesc(comboSubjectDesc);

        try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = client.getDatabase("Enrollment");

            Subject subject = Subject.getSubjectByCode(db, comboSubjectCode.getSelectedItem().toString());
            comboSubjectDesc.setSelectedItem(subject == null ? "" : subject.getDescription());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_comboSubjectCodePopupMenuWillBecomeInvisible

    private void comboSubjectDescPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboSubjectDescPopupMenuWillBecomeInvisible
        if (comboSubjectDesc.getSelectedItem() == null) {
            return;
        }

        PopulateCombo.subjectCode(comboSubjectCode);
        PopulateCombo.subjectDesc(comboSubjectDesc);

        try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = client.getDatabase("Enrollment");

            Subject subject = Subject.getSubjectByDesc(db, comboSubjectDesc.getSelectedItem().toString());
            comboSubjectCode.setSelectedItem(subject == null ? "" : subject.getSubjectCode());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_comboSubjectDescPopupMenuWillBecomeInvisible

    private void comboStudentNamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboStudentNamePopupMenuWillBecomeInvisible
        if (comboStudentName.getSelectedItem() == null) {
            return;
        }

        PopulateTable.grade(tableGrades, comboStudentName);

        try (MongoClient client = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase db = client.getDatabase("Enrollment");

            Student student = Student.getStudentByName(db, comboStudentName.getSelectedItem().toString());
            if (student == null) {
                txtStudentId.setText(null);
            } else {
                int studentId = student.getStudentId();
                txtStudentId.setText(String.valueOf(studentId));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        PopulateCombo.studentName(comboStudentName);
        PopulateTable.grade(tableGrades, comboStudentName);
    }//GEN-LAST:event_comboStudentNamePopupMenuWillBecomeInvisible


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboGrade;
    private javax.swing.JComboBox<String> comboStudentName;
    private javax.swing.JComboBox<String> comboSubjectCode;
    private javax.swing.JComboBox<String> comboSubjectDesc;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblSubjectCode;
    private javax.swing.JLabel lblSubjectDescription;
    private javax.swing.JPanel panelGrade;
    private javax.swing.JPanel panelInputs;
    private javax.swing.JPanel panelStudentID;
    private javax.swing.JPanel panelStudentName;
    private javax.swing.JPanel panelSubjectCode;
    private javax.swing.JPanel panelSubjectDescription;
    private javax.swing.JScrollPane scrollGrades;
    private javax.swing.JSeparator separator;
    private javax.swing.JTable tableGrades;
    private javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
